        -:    0:Source:C:/Users/melia/CLionProjects/TPI-AyED1/auxiliares.cpp
        -:    0:Graph:C:\Users\melia\CLionProjects\TPI-AyED1\cmake-build-debug\CMakeFiles\tpi.dir\auxiliares.gcno
        -:    0:Data:C:\Users\melia\CLionProjects\TPI-AyED1\cmake-build-debug\CMakeFiles\tpi.dir\auxiliares.gcda
        -:    0:Runs:1
        -:    1:#include <algorithm>
        -:    2:#include "auxiliares.h"
        -:    3:#include <iostream>
        -:    4:#include <algorithm>
        -:    5:#include <fstream>
        -:    6:#include <iomanip>
        -:    7:
        -:    8:using namespace std;
        -:    9:
        -:   10:const double pi = 3.14;
        -:   11:double radioTierra = 6378;
        -:   12:
function _Z14obtenerLatitudSt5tupleIJddEE called 873 returned 100% blocks executed 100%
      873:   13:double obtenerLatitud(gps posicion) {
      873:   14:    return get<0>(posicion);
      873:   14-block  0
call    0 returned 873
        -:   15:}
        -:   16:
function _Z15obtenerLongitudSt5tupleIJddEE called 621 returned 100% blocks executed 100%
      621:   17:double obtenerLongitud(gps posicion) {
      621:   18:    return get<1>(posicion);
      621:   18-block  0
call    0 returned 621
        -:   19:}
        -:   20:
function _Z15obtenerPosicionSt5tupleIJdS_IJddEEEE called 627 returned 100% blocks executed 100%
      627:   21:gps obtenerPosicion(tuple<tiempo, gps> medicion) {
      627:   22:    return get<1>(medicion);
      627:   22-block  0
call    0 returned 627
        -:   23:}
        -:   24:
function _Z13obtenerTiempoSt5tupleIJdS_IJddEEEE called 863 returned 100% blocks executed 100%
      863:   25:tiempo obtenerTiempo(tuple<tiempo, gps> medicion) {
      863:   26:    return get<0>(medicion);
      863:   26-block  0
call    0 returned 863
        -:   27:}
function _Z8distEnKMSt5tupleIJddEES0_ called 96 returned 100% blocks executed 100%
       96:   28:double distEnKM(gps posicion1, gps posicion2) {
       96:   29:    double latitud1 = obtenerLatitud(posicion1);
       96:   29-block  0
call    0 returned 96
       96:   30:    double latitud2 = obtenerLatitud(posicion2);
call    0 returned 96
       96:   31:    double longitud1 = obtenerLongitud(posicion1);
call    0 returned 96
       96:   32:    double longitud2 = obtenerLongitud(posicion2);
call    0 returned 96
        -:   33:
        -:   34:    // obtengo la distancia
       96:   35:    double distanciaLatitud = (latitud2 - latitud1) * pi / 180.0;
       96:   36:    double distanciaLongitud = (longitud2 - longitud1) * pi / 180.0;
        -:   37:
        -:   38:    // paso las latitudes a radianes
       96:   39:    latitud1 = (latitud1) * pi / 180.0;
       96:   40:    latitud2 = (latitud2) * pi / 180.0;
        -:   41:
        -:   42:    // aplico la formula
       96:   43:    double a = pow(sin(distanciaLatitud / 2), 2) +
call    0 returned 96
       96:   44:               pow(sin(distanciaLongitud / 2), 2) *
call    0 returned 96
       96:   45:               cos(latitud1) * cos(latitud2);
        -:   46:
       96:   47:    double c = 2 * asin(sqrt(a));
       96:   48:    return radioTierra * c;
        -:   49:}
        -:   50:
function _Z12desviarPuntoSt5tupleIJddEEdd called 59 returned 100% blocks executed 100%
       59:   51:gps desviarPunto(gps p, double desvioMtsLatitud, double desvioMtsLongitud){
       59:   52:    double lat = obtenerLatitud(p);
       59:   52-block  0
call    0 returned 59
       59:   53:    double lon = obtenerLongitud(p);
call    0 returned 59
        -:   54:
       59:   55:    double dx = desvioMtsLatitud / 1000;
       59:   56:    double dy = desvioMtsLongitud / 1000;
       59:   57:    double new_latitude = lat + (dx / radioTierra) * (180 / pi);
       59:   58:    double new_longitude = lon + (dy / radioTierra) * (180 / pi) / cos(lat * pi / 180);
       59:   59:    return puntoGps(new_latitude, new_longitude);
call    0 returned 59
        -:   60:
        -:   61:}
        -:   62:
        -:   63:
function _Z8puntoGpsdd called 167 returned 100% blocks executed 100%
      167:   64:gps puntoGps(double latitud, double longitud) {
      167:   65:    return make_tuple(latitud, longitud);
      167:   65-block  0
call    0 returned 167
        -:   66:}
        -:   67:
function _Z8mediciondSt5tupleIJddEE called 95 returned 100% blocks executed 100%
       95:   68:tuple<tiempo, gps> medicion(tiempo t, gps g) {
       95:   69:    return make_tuple(t, g);
       95:   69-block  0
call    0 returned 95
        -:   70:}
        -:   71:
function _Z22guardarGrillaEnArchivoSt6vectorISt5tupleIJS0_IJddEES1_S0_IJiiEEEESaIS3_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   72:void guardarGrillaEnArchivo(grilla g, string nombreArchivo){
    #####:   73:    ofstream myfile;
    %%%%%:   73-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   74:    float esq1_lat, esq2_lat, esq1_lng, esq2_lng;
        -:   75:    int name_0, name_1;
        -:   76:
    #####:   77:    myfile.open(nombreArchivo);
    %%%%%:   77-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   78:    myfile << std::fixed << std::setprecision(5);
    %%%%%:   78-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   78-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:   79:    for(int i = 0; i < g.size(); i++){
    %%%%%:   79-block  0
    %%%%%:   79-block  1
    %%%%%:   79-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   80:        esq1_lat = get<0>(get<0>(g[i]));
    %%%%%:   80-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   81:        esq1_lng = get<1>(get<0>(g[i]));
call    0 never executed
call    1 never executed
call    2 never executed
        -:   82:
    #####:   83:        esq2_lat = get<0>(get<1>(g[i]));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   84:        esq2_lng = get<1>(get<1>(g[i]));
call    0 never executed
call    1 never executed
call    2 never executed
        -:   85:
    #####:   86:        name_0 = get<0>(get<2>(g[i]));
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   87:        name_1 = get<1>(get<2>(g[i]));
call    0 never executed
call    1 never executed
call    2 never executed
        -:   88:
    #####:   89:        myfile << esq1_lat << "\t"
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   89-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   90:               << esq1_lng << "\t"
    %%%%%:   90-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   90-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   91:               << esq2_lat << "\t"
    %%%%%:   91-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   91-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   92:               << esq2_lng << "\t"
    %%%%%:   92-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   93:               << "(" << name_0 << "," << name_1 << ")"
    %%%%%:   93-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   93-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   93-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   93-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   93-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   93-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    #####:   94:               << endl;
    %%%%%:   94-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   95:
        -:   96:    }
    #####:   97:    myfile.close();
    %%%%%:   97-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   98:
    #####:   99:}
    %%%%%:   99-block  0
call    0 never executed
    $$$$$:   99-block  1
call    1 never executed
        -:  100:
function _Z26guardarRecorridosEnArchivoSt6vectorIS_ISt5tupleIJddEESaIS1_EESaIS3_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  101:void guardarRecorridosEnArchivo(vector<recorrido> recorridos, string nombreArchivo){
    #####:  102:    ofstream myfile;
    %%%%%:  102-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  103:    float lat, lng;
        -:  104:
    #####:  105:    myfile.open(nombreArchivo);
    %%%%%:  105-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  106:    myfile << std::fixed << std::setprecision(5);
    %%%%%:  106-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  106-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:  107:    for(int i = 0; i < recorridos.size(); i++){
    %%%%%:  107-block  0
    %%%%%:  107-block  1
    %%%%%:  107-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  108:        for(int k = 0; k < recorridos[i].size(); k++){
    %%%%%:  108-block  0
    %%%%%:  108-block  1
    %%%%%:  108-block  2
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  109:            lat= get<0>(recorridos[i][k]);
    %%%%%:  109-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  110:            lng= get<1>(recorridos[i][k]);
call    0 never executed
call    1 never executed
call    2 never executed
        -:  111:
    #####:  112:            myfile << i << "\t"
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  112-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  113:                   << lat << "\t"
    %%%%%:  113-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  113-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  114:                   << lng << endl;
    %%%%%:  114-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  114-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  115:        }
        -:  116:    }
    #####:  117:    myfile.close();
    %%%%%:  117-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  118:
    #####:  119:}
    %%%%%:  119-block  0
call    0 never executed
    $$$$$:  119-block  1
call    1 never executed
function _Z9maxTiempoSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EE called 59 returned 100% blocks executed 100%
       59:  120:tiempo maxTiempo (viaje v){
       59:  121:    tiempo res = obtenerTiempo(v[0]);
       59:  121-block  0
call    0 returned 59
call    1 returned 59
       59:  122:    int i = 1;
      191:  123:    while (i < v.size()) {
      191:  123-block  0
call    0 returned 191
branch  1 taken 132
branch  2 taken 59 (fallthrough)
      132:  124:        if ((obtenerTiempo(v[i]) > res)){
      132:  124-block  0
call    0 returned 132
call    1 returned 132
branch  2 taken 127 (fallthrough)
branch  3 taken 5
      127:  125:            res = obtenerTiempo(v[i]);
      127:  125-block  0
call    0 returned 127
call    1 returned 127
        -:  126:        }
      132:  127:        i = i + 1;
      132:  127-block  0
        -:  128:    }
       59:  129:    return res;
       59:  129-block  0
        -:  130:}
        -:  131:
function _Z9minTiempoSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EE called 72 returned 100% blocks executed 85%
       72:  132:tiempo minTiempo (viaje v){
       72:  133:    tiempo res = obtenerTiempo(v[0]);
       72:  133-block  0
call    0 returned 72
call    1 returned 72
       72:  134:    int i = 1;
      223:  135:    while (i < v.size()) {
      223:  135-block  0
call    0 returned 223
branch  1 taken 151
branch  2 taken 72 (fallthrough)
      151:  136:        if ((obtenerTiempo(v[i]) < res)){
      151:  136-block  0
call    0 returned 151
call    1 returned 151
branch  2 taken 0 (fallthrough)
branch  3 taken 151
    #####:  137:            res = obtenerTiempo(v[i]);
    %%%%%:  137-block  0
call    0 never executed
call    1 never executed
        -:  138:        }
      151:  139:        i = i + 1;
      151:  139-block  0
        -:  140:    }
       72:  141:    return res;
       72:  141-block  0
        -:  142:}
        -:  143:
function _Z19buscoSiguientePuntoSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EES2_ called 12 returned 100% blocks executed 92%
       12:  144:tuple<tiempo,gps>buscoSiguientePunto(viaje v, tuple <tiempo, gps> tup) {
       12:  145:    int k = 0;
       12:  146:    tuple<tiempo, gps> res = ultimoPuntoDelviaje(v);
       12:  146-block  0
call    0 returned 12
call    1 returned 12
branch  2 taken 12 (fallthrough)
branch  3 taken 0 (throw)
       12:  146-block  1
call    4 returned 12
    $$$$$:  146-block  2
call    5 never executed
       46:  147:    while (k < v.size()){
       46:  147-block  0
call    0 returned 46
branch  1 taken 34
branch  2 taken 12 (fallthrough)
       34:  148:        if ((obtenerTiempo(v[k]) < obtenerTiempo(res)) && (obtenerTiempo(v[k]) > obtenerTiempo(tup)) ){
       34:  148-block  0
call    0 returned 34
call    1 returned 34
call    2 returned 34
branch  3 taken 22 (fallthrough)
branch  4 taken 12
       22:  148-block  1
call    5 returned 22
call    6 returned 22
call    7 returned 22
branch  8 taken 4 (fallthrough)
branch  9 taken 18
        4:  148-block  2
       30:  148-block  3
       34:  148-block  4
branch 10 taken 4 (fallthrough)
branch 11 taken 30
        4:  149:            res = v[k];
        4:  149-block  0
call    0 returned 4
call    1 returned 4
        -:  150:        }
       34:  151:        k++;
       34:  151-block  0
        -:  152:    }
       12:  153:    return res;
       12:  153-block  0
       12:  153-block  1
        -:  154:}
        -:  155:
function _Z19ultimoPuntoDelviajeSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EE called 12 returned 100% blocks executed 89%
       12:  156:tuple<tiempo, gps> ultimoPuntoDelviaje(viaje v){
       12:  157:    int i = 0;
       12:  158:    tiempo t_ref = maxTiempo(v);
       12:  158-block  0
call    0 returned 12
call    1 returned 12
branch  2 taken 12 (fallthrough)
branch  3 taken 0 (throw)
       12:  158-block  1
call    4 returned 12
    $$$$$:  158-block  2
call    5 never executed
       12:  159:    tuple<tiempo, gps> res;
        -:  160:
       46:  161:    while(i < v.size()){
       46:  161-block  0
call    0 returned 46
branch  1 taken 34
branch  2 taken 12 (fallthrough)
       34:  162:        if (obtenerTiempo(v[i]) == t_ref){
       34:  162-block  0
call    0 returned 34
call    1 returned 34
branch  2 taken 12 (fallthrough)
branch  3 taken 22
       12:  163:            res = v[i];
       12:  163-block  0
call    0 returned 12
call    1 returned 12
       12:  164:            i = v.size();
call    0 returned 12
        -:  165:        }
       34:  166:        i++;
       34:  166-block  0
        -:  167:    }
       12:  168:    return res;
       12:  168-block  0
       12:  168-block  1
        -:  169:}
function _Z9velocidadSt5tupleIJdS_IJddEEEES1_ called 4 returned 100% blocks executed 89%
        4:  170:double velocidad(tuple <tiempo, gps> p1, tuple <tiempo, gps> p2){
        4:  171:    double vel = (distEnKM(obtenerPosicion(p1), obtenerPosicion(p2)))/((obtenerTiempo(p2) - obtenerTiempo(p1))/3600);
        4:  171-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:  171-block  1
call    4 returned 4
branch  5 taken 4 (fallthrough)
branch  6 taken 0 (throw)
        4:  171-block  2
call    7 returned 4
call    8 returned 4
    $$$$$:  171-block  3
        4:  172:    return vel;
        4:  172-block  0
        -:  173:}
        -:  174:
function _Z11esq1DeCeldaSt5tupleIJS_IJddEES0_S_IJiiEEEE called 161 returned 100% blocks executed 100%
      161:  175:gps esq1DeCelda(celda c) {
      161:  176:    return get<0>(c);
      161:  176-block  0
call    0 returned 161
        -:  177:}
        -:  178:
function _Z11esq2DeCeldaSt5tupleIJS_IJddEES0_S_IJiiEEEE called 287 returned 100% blocks executed 100%
      287:  179:gps esq2DeCelda(celda c) {
      287:  180:    return get<1>(c);
      287:  180-block  0
call    0 returned 287
        -:  181:}
        -:  182:
function _Z13nombreDeCeldaSt5tupleIJS_IJddEES0_S_IJiiEEEE called 20 returned 100% blocks executed 100%
       20:  183:nombre nombreDeCelda(celda c){
       20:  184:    return get<2>(c);
       20:  184-block  0
call    0 returned 20
        -:  185:}
        -:  186:
function _Z12filaDeNombreSt5tupleIJiiEE called 10 returned 100% blocks executed 100%
       10:  187:int filaDeNombre(nombre n){
       10:  188:    return get<0>(n);
       10:  188-block  0
call    0 returned 10
        -:  189:}
        -:  190:
function _Z15columnaDeNombreSt5tupleIJiiEE called 10 returned 100% blocks executed 100%
       10:  191:int columnaDeNombre(nombre n){
       10:  192:    return get<1>(n);
       10:  192-block  0
call    0 returned 10
        -:  193:}
        -:  194:
function _Z19buscoCeldaDeUnViajeSt5tupleIJdS_IJddEEEESt6vectorIS_IJS0_S0_S_IJiiEEEESaIS4_EE called 10 returned 100% blocks executed 84%
       10:  195:celda buscoCeldaDeUnViaje(tuple<tiempo, gps> v, grilla g){
       10:  196:    int k = 0; celda c;
      161:  197:    while (k < g.size()){
       10:  197-block  0
      161:  197-block  1
call    0 returned 161
branch  1 taken 151
branch  2 taken 10 (fallthrough)
      151:  198:        if ((obtenerLatitud(obtenerPosicion(v)) <= obtenerLatitud(esq1DeCelda(g[k])))
      151:  198-block  0
call    0 returned 151
branch  1 taken 151 (fallthrough)
branch  2 taken 0 (throw)
      151:  198-block  1
call    3 returned 151
call    4 returned 151
call    5 returned 151
call    6 returned 151
    $$$$$:  198-block  2
      151:  199:            && (obtenerLongitud(obtenerPosicion(v)) <= obtenerLongitud(esq2DeCelda(g[k])))
      151:  199-block  0
call    0 returned 151
branch  1 taken 151 (fallthrough)
branch  2 taken 0 (throw)
      151:  199-block  1
call    3 returned 151
call    4 returned 151
call    5 returned 151
call    6 returned 151
branch  7 taken 136 (fallthrough)
branch  8 taken 15
    $$$$$:  199-block  2
    $$$$$:  199-block  3
      136:  200:            && (obtenerLatitud(obtenerPosicion(v)) >= obtenerLatitud(esq2DeCelda(g[k])))
      136:  200-block  0
call    0 returned 136
branch  1 taken 136 (fallthrough)
branch  2 taken 0 (throw)
      136:  200-block  1
call    3 returned 136
call    4 returned 136
call    5 returned 136
call    6 returned 136
branch  7 taken 10 (fallthrough)
branch  8 taken 126
    $$$$$:  200-block  2
    $$$$$:  200-block  3
      302:  201:            && (obtenerLongitud(obtenerPosicion(v)) >= obtenerLongitud(esq1DeCelda(g[k])))){
branch  0 taken 151 (fallthrough)
branch  1 taken 0
       10:  201-block  0
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:  201-block  1
call    5 returned 10
call    6 returned 10
call    7 returned 10
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0
       10:  201-block  2
      141:  201-block  3
      151:  201-block  4
branch 11 taken 10 (fallthrough)
branch 12 taken 141
    $$$$$:  201-block  5
    $$$$$:  201-block  6
       10:  202:            c = g[k];
       10:  202-block  0
call    0 returned 10
call    1 returned 10
       10:  203:            k = g.size();
call    0 returned 10
        -:  204:        }
      151:  205:        k = k + 1;
      151:  205-block  0
        -:  206:    }
       10:  207:    return c;
       10:  207-block  0
       10:  207-block  1
        -:  208:}
        -:  209:
function _Z20viajeEnFranjaHorariaSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EEdd called 21 returned 100% blocks executed 61%
       21:  210:bool viajeEnFranjaHoraria(viaje v, tiempo t0, tiempo tf){
        -:  211:    bool res;
       31:  212:    if ((minTiempo(v) >= t0 && maxTiempo(v) <= tf)
       10:  212-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:  212-block  1
call    3 returned 10
branch  4 taken 10 (fallthrough)
branch  5 taken 0 (throw)
       10:  212-block  2
branch  6 taken 7 (fallthrough)
branch  7 taken 3
       10:  212-block  3
call    8 returned 10
       21:  212-block  4
branch  9 taken 21 (fallthrough)
branch 10 taken 0
       21:  212-block  5
call   11 returned 21
       21:  212-block  6
branch 12 taken 6 (fallthrough)
branch 13 taken 15
    $$$$$:  212-block  7
branch 14 never executed
branch 15 never executed
    $$$$$:  212-block  8
call   16 never executed
    $$$$$:  212-block  9
    $$$$$:  212-block 10
branch 17 never executed
branch 18 never executed
    $$$$$:  212-block 11
call   19 never executed
       39:  213:        || (minTiempo(v) <= t0 && maxTiempo(v) > t0 )
       18:  213-block  0
call    0 returned 18
branch  1 taken 18 (fallthrough)
branch  2 taken 0 (throw)
       18:  213-block  1
call    3 returned 18
branch  4 taken 11 (fallthrough)
branch  5 taken 7
       11:  213-block  2
call    6 returned 11
branch  7 taken 11 (fallthrough)
branch  8 taken 0 (throw)
       11:  213-block  3
call    9 returned 11
branch 10 taken 11 (fallthrough)
branch 11 taken 0 (throw)
       11:  213-block  4
branch 12 taken 10 (fallthrough)
branch 13 taken 1
       11:  213-block  5
call   14 returned 11
       21:  213-block  6
branch 15 taken 18 (fallthrough)
branch 16 taken 3
       18:  213-block  7
call   17 returned 18
       21:  213-block  8
branch 18 taken 10 (fallthrough)
branch 19 taken 11
    $$$$$:  213-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  213-block 10
call   22 never executed
    $$$$$:  213-block 11
    $$$$$:  213-block 12
branch 23 never executed
branch 24 never executed
    $$$$$:  213-block 13
call   25 never executed
    $$$$$:  213-block 14
       38:  214:        || (minTiempo(v) <= tf && maxTiempo(v) > tf)
       17:  214-block  0
call    0 returned 17
branch  1 taken 17 (fallthrough)
branch  2 taken 0 (throw)
       17:  214-block  1
call    3 returned 17
branch  4 taken 12 (fallthrough)
branch  5 taken 5
       12:  214-block  2
call    6 returned 12
branch  7 taken 12 (fallthrough)
branch  8 taken 0 (throw)
       12:  214-block  3
call    9 returned 12
branch 10 taken 12 (fallthrough)
branch 11 taken 0 (throw)
       12:  214-block  4
branch 12 taken 10 (fallthrough)
branch 13 taken 2
       12:  214-block  5
call   14 returned 12
       21:  214-block  6
branch 15 taken 17 (fallthrough)
branch 16 taken 4
       17:  214-block  7
call   17 returned 17
       21:  214-block  8
branch 18 taken 11 (fallthrough)
branch 19 taken 10
    $$$$$:  214-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  214-block 10
call   22 never executed
    $$$$$:  214-block 11
    $$$$$:  214-block 12
branch 23 never executed
branch 24 never executed
    $$$$$:  214-block 13
call   25 never executed
    $$$$$:  214-block 14
       42:  215:        || (minTiempo(v) <= t0 && maxTiempo(v) >= tf)){
       21:  215-block  0
call    0 returned 21
branch  1 taken 21 (fallthrough)
branch  2 taken 0 (throw)
       21:  215-block  1
call    3 returned 21
branch  4 taken 10 (fallthrough)
branch  5 taken 11
       15:  215-block  2
call    6 returned 15
branch  7 taken 15 (fallthrough)
branch  8 taken 0 (throw)
       15:  215-block  3
call    9 returned 15
branch 10 taken 10 (fallthrough)
branch 11 taken 5
       10:  215-block  4
call   12 returned 10
branch 13 taken 10 (fallthrough)
branch 14 taken 0 (throw)
       10:  215-block  5
call   15 returned 10
branch 16 taken 10 (fallthrough)
branch 17 taken 0 (throw)
       10:  215-block  6
branch 18 taken 0 (fallthrough)
branch 19 taken 10
        6:  215-block  7
       15:  215-block  8
       21:  215-block  9
branch 20 taken 10 (fallthrough)
branch 21 taken 11
       10:  215-block 10
call   22 returned 10
       21:  215-block 11
branch 23 taken 15 (fallthrough)
branch 24 taken 6
       15:  215-block 12
call   25 returned 15
       21:  215-block 13
branch 26 taken 12 (fallthrough)
branch 27 taken 9
    $$$$$:  215-block 14
branch 28 never executed
branch 29 never executed
    $$$$$:  215-block 15
call   30 never executed
    $$$$$:  215-block 16
    $$$$$:  215-block 17
branch 31 never executed
branch 32 never executed
    $$$$$:  215-block 18
call   33 never executed
    $$$$$:  215-block 19
        6:  216:        res = true;
        6:  216-block  0
        -:  217:    } else{
       15:  218:        res = false;
       15:  218-block  0
        -:  219:    }
        -:  220:
       21:  221:    return res;
       21:  221-block  0
       21:  221-block  1
        -:  222:}
        -:  223:
        -:  224:
function _Z14puntoACorregirSt6vectorISt5tupleIJdS0_IJddEEEESaIS2_EEd called 3 returned 100% blocks executed 100%
        3:  225:int puntoACorregir(viaje v, tiempo error){
        3:  226:    int i = 0;
        -:  227:    int indice;
        3:  228:    bool encontrado = false;
       19:  229:    while (i < v.size() && !encontrado){
        3:  229-block  0
       19:  229-block  1
call    0 returned 19
branch  1 taken 18 (fallthrough)
branch  2 taken 1
       18:  229-block  2
branch  3 taken 16 (fallthrough)
branch  4 taken 2
       16:  229-block  3
        3:  229-block  4
       19:  229-block  5
branch  5 taken 16
branch  6 taken 3 (fallthrough)
       16:  230:        if (obtenerTiempo(v[i]) == error){
       16:  230-block  0
call    0 returned 16
call    1 returned 16
branch  2 taken 3 (fallthrough)
branch  3 taken 13
        3:  231:            encontrado = true;
        3:  232:            indice = i;
        3:  232-block  0
        -:  233:        }
       16:  234:        i++;
       16:  234-block  0
        -:  235:    }
        3:  236:    return indice;
        3:  236-block  0
        -:  237:}
        -:  238:
        -:  239:
function _Z22puntoInmediatoAnteriorSt5tupleIJdS_IJddEEEESt6vectorIS1_SaIS1_EES2_IdSaIdEE called 3 returned 100% blocks executed 91%
        3:  240:tuple<tiempo, gps>  puntoInmediatoAnterior(tuple<tiempo, gps> punto, viaje v, vector<tiempo> errores){
        3:  241:    int i=0;
        3:  242:    double t_ant = obtenerTiempo(v[i]);
        3:  242-block  0
call    0 returned 3
call    1 returned 3
        3:  243:    double t_ref = obtenerTiempo(punto);
call    0 returned 3
        3:  244:    tuple<tiempo, gps> res = v[i];
call    0 returned 3
       29:  245:    while (i<v.size()){
       29:  245-block  0
call    0 returned 29
branch  1 taken 26
branch  2 taken 3 (fallthrough)
       26:  246:        i++;
       26:  247:        if ((obtenerTiempo(v[i]) < t_ref) && (obtenerTiempo(v[i]) > t_ant) && !tieneError(v[i], errores)){
       26:  247-block  0
call    0 returned 26
call    1 returned 26
branch  2 taken 21 (fallthrough)
branch  3 taken 5
       21:  247-block  1
call    4 returned 21
call    5 returned 21
branch  6 taken 9 (fallthrough)
branch  7 taken 12
        9:  247-block  2
call    8 returned 9
branch  9 taken 9 (fallthrough)
branch 10 taken 0 (throw)
        9:  247-block  3
call   11 returned 9
call   12 returned 9
branch 13 taken 9 (fallthrough)
branch 14 taken 0
        9:  247-block  4
       17:  247-block  5
       26:  247-block  6
branch 15 taken 9 (fallthrough)
branch 16 taken 17
        9:  247-block  7
call   17 returned 9
       26:  247-block  8
branch 18 taken 9 (fallthrough)
branch 19 taken 17
    $$$$$:  247-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  247-block 10
call   22 never executed
        9:  248:            t_ant = obtenerTiempo(v[i]);
        9:  248-block  0
call    0 returned 9
call    1 returned 9
        9:  249:            res = v[i];
call    0 returned 9
call    1 returned 9
        -:  250:        }
        -:  251:    }
        -:  252:
        3:  253:    return res;
        3:  253-block  0
        3:  253-block  1
        -:  254:}
        -:  255:
function _Z23puntoInmediatoPosteriorSt5tupleIJdS_IJddEEEESt6vectorIS1_SaIS1_EES2_IdSaIdEE called 3 returned 100% blocks executed 83%
        3:  256:tuple<tiempo, gps>  puntoInmediatoPosterior(tuple<tiempo, gps> punto, viaje v, vector<tiempo> errores){
        3:  257:    tuple<tiempo, gps> res;
        3:  258:    int i=0;
        3:  259:    double t_post = maxTiempo(v);
        3:  259-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:  259-block  1
call    4 returned 3
    $$$$$:  259-block  2
call    5 never executed
    $$$$$:  259-block  3
call    6 never executed
        3:  260:    double t_ref = obtenerTiempo(punto);
call    0 returned 3
       21:  261:    while (i<v.size()){
       21:  261-block  0
call    0 returned 21
branch  1 taken 18
branch  2 taken 3 (fallthrough)
       18:  262:        if ((obtenerTiempo(v[i]) > t_ref) && (obtenerTiempo(v[i]) <= t_post) && !tieneError(v[i], errores)){
       18:  262-block  0
call    0 returned 18
call    1 returned 18
branch  2 taken 10 (fallthrough)
branch  3 taken 8
       10:  262-block  1
call    4 returned 10
call    5 returned 10
branch  6 taken 3 (fallthrough)
branch  7 taken 7
        3:  262-block  2
call    8 returned 3
branch  9 taken 3 (fallthrough)
branch 10 taken 0 (throw)
        3:  262-block  3
call   11 returned 3
call   12 returned 3
branch 13 taken 3 (fallthrough)
branch 14 taken 0
        3:  262-block  4
       15:  262-block  5
       18:  262-block  6
branch 15 taken 3 (fallthrough)
branch 16 taken 15
        3:  262-block  7
call   17 returned 3
       18:  262-block  8
branch 18 taken 3 (fallthrough)
branch 19 taken 15
    $$$$$:  262-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  262-block 10
call   22 never executed
        3:  263:            t_post = obtenerTiempo(v[i]);
        3:  263-block  0
call    0 returned 3
call    1 returned 3
        3:  264:            res = v[i];
call    0 returned 3
call    1 returned 3
        -:  265:        }
       18:  266:        i++;
       18:  266-block  0
        -:  267:    }
        -:  268:
        3:  269:    return res;
        3:  269-block  0
        3:  269-block  1
        -:  270:}
        -:  271:
function _Z10tieneErrorSt5tupleIJdS_IJddEEEESt6vectorIdSaIdEE called 12 returned 100% blocks executed 90%
       12:  272:bool tieneError(tuple<tiempo,gps> punto, vector<tiempo> errores){
       12:  273:    bool hay_error = false;
        -:  274:
       30:  275:    for (int i = 0; i < errores.size(); ++i) {
       12:  275-block  0
       18:  275-block  1
       30:  275-block  2
call    0 returned 30
branch  1 taken 18
branch  2 taken 12 (fallthrough)
       18:  276:        if (errores[i] == obtenerTiempo(punto)){
       18:  276-block  0
call    0 returned 18
call    1 returned 18
branch  2 taken 0 (fallthrough)
branch  3 taken 18
    #####:  277:            hay_error = true;
    %%%%%:  277-block  0
        -:  278:        }
        -:  279:    }
       12:  280:    return hay_error;
       12:  280-block  0
        -:  281:}
function _Z14velocidadMediadddd called 6 returned 100% blocks executed 100%
        6:  282:double velocidadMedia(tiempo tiempo_a, tiempo tiempo_b, double a, double b){
        -:  283:    double velocidad;
        6:  284:    velocidad = (b-a)/(tiempo_b-tiempo_a);
        -:  285:
        6:  286:    return  velocidad;
        6:  286-block  0
        -:  287:}
        -:  288:
function _Z13gpsSobreRectaSt5tupleIJdS_IJddEEEES1_d called 3 returned 100% blocks executed 100%
        3:  289:gps  gpsSobreRecta(tuple<tiempo, gps> punto_a, tuple<tiempo, gps> punto_b, tiempo tp_error){
        -:  290:    double latitud, longitud;
        3:  291:    double tiempo_a = obtenerTiempo(punto_a) , tiempo_b=obtenerTiempo(punto_b);
        3:  291-block  0
call    0 returned 3
call    1 returned 3
        3:  292:    double latitud_a = obtenerLatitud(obtenerPosicion(punto_a)), latitud_b = obtenerLatitud(obtenerPosicion(punto_b));
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  292-block  0
call    3 returned 3
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:  292-block  1
call    7 returned 3
        3:  293:    double longitud_a = obtenerLongitud(obtenerPosicion(punto_a)) , longitud_b = obtenerLongitud(obtenerPosicion(punto_b));
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  293-block  0
call    3 returned 3
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:  293-block  1
call    7 returned 3
        3:  294:    double vel_media_lat = velocidadMedia(tiempo_a, tiempo_b, latitud_a,  latitud_b);
call    0 returned 3
        3:  295:    double vel_media_long = velocidadMedia(tiempo_a, tiempo_b, longitud_a,  longitud_b);
call    0 returned 3
        3:  296:    latitud = (tp_error- tiempo_a)*vel_media_lat + latitud_a;
        3:  297:    longitud = (tp_error- tiempo_a)*vel_media_long + longitud_a;
        -:  298:
        6:  299:    return make_tuple(latitud, longitud);
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  299-block  0
        -:  300:
        -:  301:}
        -:  302:
        -:  303:
        -:  304:
        -:  305:
